#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

apiVersion: apps/v1
kind: Deployment
metadata:
  name: secretgen-controller
  namespace: #@ data.values.namespace
  annotations:
    secretgen-controller.carvel.dev/version: #@ data.values.secretgen_controller_version or assert.fail("'secretgen_controller_version' must be set")
spec:
  #@ if data.values.deployment.updateStrategy != "":
  #@overlay/match missing_ok=True
  strategy:
    type: #@ data.values.deployment.updateStrategy
    #@overlay/match missing_ok=True
    #@ if data.values.deployment.updateStrategy == "RollingUpdate":
    rollingUpdate:
      maxUnavailable: #@ data.values.deployment.rollingUpdate.maxUnavailable
      maxSurge: #@ data.values.deployment.rollingUpdate.maxSurge
    #@ end
  #@ end
  selector:
    matchLabels:
      app: secretgen-controller
  replicas: 1
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: secretgen-controller
    spec:
      serviceAccount: secretgen-controller-sa
      containers:
      - name: secretgen-controller
        image: secretgen-controller
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
        securityContext:
          runAsUser: 1000
          runAsGroup: 2000
      securityContext:
        fsGroup: 3000
      #@ if data.values.deployment.nodeSelector != None:
      nodeSelector:
        #@ for key in data.values.deployment.nodeSelector:
        #@overlay/match missing_ok=True
        #@yaml/text-templated-strings
        (@= key @): #@ data.values.deployment.nodeSelector[key]
        #@ end
      #@ end