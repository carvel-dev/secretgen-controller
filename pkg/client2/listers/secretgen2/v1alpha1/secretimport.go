// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "carvel.dev/secretgen-controller/pkg/apis/secretgen2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecretImportLister helps list SecretImports.
// All objects returned here must be treated as read-only.
type SecretImportLister interface {
	// List lists all SecretImports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecretImport, err error)
	// SecretImports returns an object that can list and get SecretImports.
	SecretImports(namespace string) SecretImportNamespaceLister
	SecretImportListerExpansion
}

// secretImportLister implements the SecretImportLister interface.
type secretImportLister struct {
	indexer cache.Indexer
}

// NewSecretImportLister returns a new SecretImportLister.
func NewSecretImportLister(indexer cache.Indexer) SecretImportLister {
	return &secretImportLister{indexer: indexer}
}

// List lists all SecretImports in the indexer.
func (s *secretImportLister) List(selector labels.Selector) (ret []*v1alpha1.SecretImport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretImport))
	})
	return ret, err
}

// SecretImports returns an object that can list and get SecretImports.
func (s *secretImportLister) SecretImports(namespace string) SecretImportNamespaceLister {
	return secretImportNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecretImportNamespaceLister helps list and get SecretImports.
// All objects returned here must be treated as read-only.
type SecretImportNamespaceLister interface {
	// List lists all SecretImports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecretImport, err error)
	// Get retrieves the SecretImport from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SecretImport, error)
	SecretImportNamespaceListerExpansion
}

// secretImportNamespaceLister implements the SecretImportNamespaceLister
// interface.
type secretImportNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecretImports in the indexer for a given namespace.
func (s secretImportNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecretImport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretImport))
	})
	return ret, err
}

// Get retrieves the SecretImport from the indexer for a given namespace and name.
func (s secretImportNamespaceLister) Get(name string) (*v1alpha1.SecretImport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("secretimport"), name)
	}
	return obj.(*v1alpha1.SecretImport), nil
}
